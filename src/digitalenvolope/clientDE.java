/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package digitalenvolope;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.Socket;
import java.util.Locale;
import javax.swing.Timer;

/**
 *
 * @author Lenovo
 */
public class clientDE extends javax.swing.JFrame{

    /**
     * Creates new form clientDE
     */
    public clientDE() {
        initComponents();
        this.setLocationRelativeTo(null);
        
    }
    
    String msg = "";
    String key = "";
    char[] stringToCharArray;
    String[] stringToInt;
    int kd_len;
    int n_len;
    int [] key_arr;
    
    static int power(int x, int y, int p) 
	{ 
		// Initialize result 
		int res = 1;	 
		
		// Update x if it is more 
		// than or equal to p 
		x = x % p; 
	
		while (y > 0) 
		{ 
			// If y is odd, multiply x 
			// with result 
			if((y & 1)==1) 
				res = (res * x) % p; 
	
			// y must be even now 
			// y = y / 2 
			y = y >> 1; 
			x = (x * x) % p; 
		} 
		return res; 
	} 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnDecrypt = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        orgMsg = new javax.swing.JTextArea();
        btnExit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        decryptKey = new javax.swing.JTextField();
        btnClear1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(169, 204, 227));

        jLabel1.setBackground(new java.awt.Color(118, 215, 196));
        jLabel1.setFont(new java.awt.Font("Trajan Pro", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(39, 55, 70));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Digital Envelope System");

        jLabel2.setFont(new java.awt.Font("Trajan Pro", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(46, 64, 83));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CLIENT");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(46, 64, 83));

        btnDecrypt.setBackground(new java.awt.Color(28, 40, 51));
        btnDecrypt.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        btnDecrypt.setForeground(new java.awt.Color(88, 214, 141));
        btnDecrypt.setText("DECRYPT");
        btnDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecryptActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(170, 183, 184));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Decrypted Message");

        orgMsg.setBackground(new java.awt.Color(247, 249, 249));
        orgMsg.setColumns(20);
        orgMsg.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        orgMsg.setForeground(new java.awt.Color(52, 73, 94));
        orgMsg.setRows(5);
        jScrollPane2.setViewportView(orgMsg);

        btnExit.setBackground(new java.awt.Color(28, 40, 51));
        btnExit.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        btnExit.setForeground(new java.awt.Color(236, 112, 99));
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(170, 183, 184));
        jLabel4.setText("Enter the key for key-decryption");

        decryptKey.setBackground(new java.awt.Color(247, 249, 249));
        decryptKey.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        decryptKey.setForeground(new java.awt.Color(52, 73, 94));

        btnClear1.setBackground(new java.awt.Color(28, 40, 51));
        btnClear1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 24)); // NOI18N
        btnClear1.setForeground(new java.awt.Color(247, 220, 111));
        btnClear1.setText("Clear");
        btnClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(btnClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(219, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(decryptKey, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(173, 173, 173)
                        .addComponent(btnDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(223, 223, 223))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(384, 384, 384))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(158, 158, 158))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(decryptKey, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDecrypt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecryptActionPerformed
        // TODO add your handling code here:
        
        
        String dk = decryptKey.getText();
        int input_key = Integer.parseInt(dk);
        
        try{
            File f = new File ("C:\\Users\\Lenovo\\Downloads\\received.txt");
            FileInputStream fin = new FileInputStream(f);
            String got_msg = "";
            String got_key = "";
            int x = 0;
            int counter =0;
            while((x=fin.read())!=-1){
                char c = (char) x;
                if((c!='.')&&(counter==0)){
                    got_msg+=c;
                }
                else if (c=='.'){
                    counter++;
                }
                else if((c!='.')&&(counter>0)){
                    got_key+=c;
                }
                else{
                    break;
                }        
                
            }
            System.out.println("Received message");
            System.out.println(got_msg);
            System.out.println("------------------------------------------------------------------------");
            System.out.println();
            System.out.println("Received key");
            System.out.println(got_key);
            
            int got_len = got_msg.length();
            int arr [] = new int [50] ;
            int gtemp;
            int num1;
            int num2;
            int num3;
            int count =0;
            for(int i=0;i<got_len;i++){
                if(got_msg.charAt(i) == '[' && got_msg.charAt(i+2) != ',' && got_msg.charAt(i+3)==','){
                    num1 = got_msg.charAt(i+1)-48;
                    num2 = got_msg.charAt(i+2)-48;
                    gtemp = (num1*10)+num2;
                    //System.out.println(gtemp);
                    arr[count] = gtemp;
                    count++;
                }
                
                else if(got_msg.charAt(i) == '[' && got_msg.charAt(i+2) == ',' ){
                    num1 = got_msg.charAt(i+1)-48;
                    gtemp = num1;
                    arr[count] = gtemp;
                    count++;
                }
                
                else if(got_msg.charAt(i) == '[' && got_msg.charAt(i+3) != ',' ){
                    num1 = got_msg.charAt(i+1)-48;
                    num2 = got_msg.charAt(i+2)-48;
                    num3 = got_msg.charAt(i+3)-48;
                    gtemp = (num1*100)+(num2*10)+num3;
                    //System.out.println(gtemp);
                    arr[count] = gtemp;
                    count++;
                }
                
                else if(got_msg.charAt(i) == ' ' && got_msg.charAt(i+2) != ',' && got_msg.charAt(i+3)==','){
                    num1 = got_msg.charAt(i+1)-48;
                    num2 = got_msg.charAt(i+2)-48;
                    gtemp = (num1*10)+num2;
                    //System.out.println(gtemp);
                    arr[count] = gtemp;
                    count++;
                }
                
                else if(got_msg.charAt(i) == ' ' && got_msg.charAt(i+2) != ',' && got_msg.charAt(i+3)==']'){
                    num1 = got_msg.charAt(i+1)-48;
                    num2 = got_msg.charAt(i+2)-48;
                    gtemp = (num1*10)+num2;
                    //System.out.println(gtemp);
                    arr[count] = gtemp;
                    count++;
                }
                
                else if(got_msg.charAt(i) == ' ' && got_msg.charAt(i+2) == ','){
                    num1 = got_msg.charAt(i+1)-48;
                    gtemp = num1;
                    arr[count] = gtemp;
                    count++;
                }
                
                else if(got_msg.charAt(i) == ' ' && got_msg.charAt(i+3) != ',' ){
                    num1 = got_msg.charAt(i+1)-48;
                    num2 = got_msg.charAt(i+2)-48;
                    num3 = got_msg.charAt(i+3)-48;
                    gtemp = (num1*100)+(num2*10)+num3;
                    //System.out.println(gtemp);
                    arr[count] = gtemp;
                    count++;
                }
                
                
                
                
            }
            System.out.println("------------------------------------------------------------------------");
            System.out.println();
            System.out.println("Received msg as integers");
            for(int i=0;i<count;i++)
                System.out.println(arr[i]);
            
            System.out.println("------------------------------------------------------------------------");
            System.out.println();
            System.out.println("Received key as integer without confusion");
            int dec_key = Integer.parseInt(got_key);
            System.out.println(dec_key - input_key);
            System.out.println("------------------------------------------------------------------------");
            System.out.println();
//            System.out.println("Received cipher");
//            for(int i=0;i<count;i++){
//                arr[i] -= dec_key;
//                System.out.println(arr[i]);
//            }
            int pri = dec_key-input_key;
            int d = pri;
            int n = 119;
                System.out.println("----------------------------------------------------");
                System.out.println("Plain Values : ");
                double plain [] = new double[100];
//                double bd;
//                double bd_temp;
                for(int i=0;i<count;i++){
                    plain[i] = power(arr[i], d , n);
                    System.out.println(plain[i]);
                }
                int temp_char;
                char put[] = new char[count];
                for(int i=0;i<count;i++){
                    temp_char = (int) plain[i] + 64;
                    put[i] = (char) temp_char;
                    System.out.println(put[i]);
                }
                System.out.println("----------------------------------------------------");
                System.out.println("Plain Values as String : ");
                String disp = new String(put);
                System.out.println(disp);
                orgMsg.setText(disp);
                
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
        
        
    }//GEN-LAST:event_btnDecryptActionPerformed

    private void btnClear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear1ActionPerformed
        // TODO add your handling code here:
        orgMsg.setText("");
        decryptKey.setText("");
    }//GEN-LAST:event_btnClear1ActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException{
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(clientDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(clientDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(clientDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(clientDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        int filesize=1022386; 
        int bytesRead;
        int currentTot = 0;
        Socket socket = new Socket("127.0.0.1",15123);
        byte [] bytearray  = new byte [filesize];
        InputStream is = socket.getInputStream();
        FileOutputStream fos = new FileOutputStream("C:\\Users\\Lenovo\\Downloads\\received.txt");
        BufferedOutputStream bos = new BufferedOutputStream(fos);
        bytesRead = is.read(bytearray,0,bytearray.length);
        currentTot = bytesRead;
 
        do {
           bytesRead =
              is.read(bytearray, currentTot, (bytearray.length-currentTot));
           if(bytesRead >= 0) currentTot += bytesRead;
        } while(bytesRead > -1);
 
        bos.write(bytearray, 0 , currentTot);
        bos.flush();
        bos.close();
        socket.close();    
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new clientDE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear1;
    public javax.swing.JButton btnDecrypt;
    private javax.swing.JButton btnExit;
    public javax.swing.JTextField decryptKey;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTextArea orgMsg;
    // End of variables declaration//GEN-END:variables
}
